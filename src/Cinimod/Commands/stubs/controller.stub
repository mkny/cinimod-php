<?php

namespace DummyNamespace;

// Eloquent-Model
use App\Models;
// Request
use App\Http\Requests\DummyClassRequest;

// Main CRUDController
use Mkny\Cinimod\Controllers\CRUDController;


// Route::controller('routeToDummyClassController', 'DummyClassController');
class DummyClassController extends CRUDController  {

	/**
	 * Armazena o nome dos relatorios. Ainda nao funciona.
	 * 
	 * @var array
	 */
	// protected $reports = [];

	/**
	 * Construtor da classe
	 * @param Models\DummyClass $m Model para operaÃ§Ãµes com o DB
	 */
	public function __construct(Models\DummyClass $m)
	{
		parent::__construct();
		$this->model = $m;
	}

	/**
	 * AÃ§Ã£o principal do controlador
	 * @return view index
	 */
	public function getIndex(){
		return $this->index();
	}

	/**
	 * Retorna a tela para ser feita a edicao
	 * @param  int $id Id do elemento
	 * @return \Illuminate\Http\Response
	 */
	public function getEdit($id){
		return $this->edit($id);
	}

	// Default
	public function postEdit(DummyClassRequest $r, $id){
		return $this->update($r,$id);
	}

	// Default
	public function getAdd(){
		return $this->create();
	}

	// Default
	public function postAdd(DummyClassRequest $r){
		return $this->store($r);
	}

	// Default
	public function getDelete($id){
		return $this->destroy($id);
	}

	// Default
	public function getShow($id){
		return $this->show($id);
	}

	// Default
	public function getSwitchStatus($id){
		return $this->statusChange($id);
	}
}


/**
 * Ideas
 *
 * Custom dataset:
 *
 * 
       // $dataset = collect($this->model->orderBy($order, $card)->get()->toArray());
       // $rows = new LengthAwarePaginator($dataset->take($limit),count($dataset), $limit, null, array('path' => '/routeToCidadeController'));
       // $rows->appends(\Request::only(['order', 'card', 'perpage']));
       
 */



/**
 *
 *
	// to father
	protected $rest_ws_url = 'http://jsonplaceholder.typicode.com/todos';

 public function _ds($fields, $order, $card, $limit, $offset=false)
	{
		$dataset = json_decode(file_get_contents('http://jsonplaceholder.typicode.com/posts'),true);
		// mdd($dataset);
		return app()->make('\Mkny\Cinimod\Logic\DatagridLogic')->datagridFromArray($dataset,$limit, $offset);
	}
    protected function _getFields2(){
    	$a = array_keys(json_decode(file_get_contents('http://jsonplaceholder.typicode.com/posts'),true)[0]);
    	$a = array_combine($a,$a);
    	$a['id'] = array(
    		'name' => 'id'
    		);
    	// mdd($a);
    	unset($a['address']);
    	unset($a['userId']);
    	return $a;
    }


	public function getIndex2()
	{
		
        // Pega as configuracoes de campos para a datagrid
        $modelconfig = $this->_getFields2();

        // Monta o datagrid
        $grid = $this->datagrid($modelconfig, $this->model, '_ds' );

        // Monta os dados para exibicao
        return view('cinimod::admin.default.list')->with($grid);
	}


	// to father
	protected function _datasource($fields, $order, $card, $limit, $offset=false){
		$dataset = json_decode(file_get_contents($this->rest_ws_url),true);
		// mdd($dataset);
		return app()->make('\Mkny\Cinimod\Logic\DatagridLogic')->datagridFromArray($dataset,$limit, $offset);
	}
    protected function _getFields(){
    	$a = array_keys(json_decode(file_get_contents($this->rest_ws_url),true)[0]);
    	$a = array_combine($a,$a);
    	$a['id'] = array(
    		'name' => 'id'
    		);
    	// mdd($a);
    	unset($a['address']);
    	unset($a['userId']);
    	return $a;
    }
 *
 * 
 */