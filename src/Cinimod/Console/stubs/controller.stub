<?php

namespace DummyNamespace;

// Eloquent-Model
use App\Models\DummyClass;

// Request
use App\Http\Requests\DummyClassRequest;

// Main CRUDController
use Mkny\Cinimod\Controllers\CRUDController;


// Route::controller('routeToDummyClassController', 'DummyClassController');
class DummyClassController extends CRUDController  {
	/**
	 * URL do WS, caso esteja sendo utilizado (ainda em testes, utilizado atualmente apenas para variavel da classe)
	 * @var string
	 */
	// protected $rest_ws_url = 'http://jsonplaceholder.typicode.com/users';

	/**
	 * Armazena o nome dos relatorios. Ainda nao funciona.
	 * 
	 * @var array
	 */
	// protected $reports = [];

	// Default
	public function __construct(DummyClass $m)
	{
		parent::__construct();
		$this->model = $m;
	}

	// Default
	public function getIndex(){
		return $this->index();
	}

	// Default
	public function getAdd(){
		return $this->create();
	}

	// Default
	public function postAdd(DummyClassRequest $r){
		return $this->store($r);
	}

	// Default
	public function getEdit($id){
		return $this->edit($id);
	}

	// Default
	public function postEdit(DummyClassRequest $r, $id){
		return $this->update($r,$id);
	}

	// Default
	public function getDelete($id){
		return $this->destroy($id);
	}

	// Default
	public function getSwitchStatus($id){
		return $this->statusChange($id);
	}

	// Default
	public function getShow($id){
		return $this->show($id);
	}
}


/**
 * Ideas
 *
 * Custom dataset:
 *
 * 
       // $dataset = collect($this->model->orderBy($order, $card)->get()->toArray());
       // $rows = new LengthAwarePaginator($dataset->take($limit),count($dataset), $limit, null, array('path' => '/routeToCidadeController'));
       // $rows->appends(\Request::only(['order', 'card', 'perpage']));
       
 */



/**
 * Gerando um método totalmente independente, com acesso a WS
 *


	public function _ds($fields, $order, $card, $limit, $offset=false)
	{
		// Um array
		$dataset = json_decode(file_get_contents('http://jsonplaceholder.typicode.com/posts'),true);

		// Ordenacao
		$dataset = array_sort($dataset, function ($value) use ($order) {
			return $value[$order];
		});

		// Cardinalidade
		if($card == 'desc'){
			$dataset = array_reverse($dataset);
		}

		// Retorna o metodo datagridFromArray, passando informacoes para o limit e offset
		return app()->make('\Mkny\Cinimod\Logic\DatagridLogic')->datagridFromArray($dataset,$limit, $offset);
	}

	
	public function getA2()
	{
		// Montagem do MConfig manual
		$fields = array (
			// Remove itens desnecessarios
			// 'userId' => 'userId', 
			'id' => array ( 
				'name' => 'id', 
				'trans' => '#',
				'searchable' => true,
				'type' => 'primaryKey',
				),
			'title' => array(
				'name' => 'title',
				'trans' => 'Título',
				'searchable' => true,

				),
			'body' => array(
				'name' => 'body',
				'trans' => 'Corpo',
				'searchable' => true,
				),
			);

        // Monta o datagrid
		$grid = $this->_datagrid($fields, null, '_ds');
		
        // Monta os dados para exibicao
		return view('cinimod::admin.default.list')->with($grid);
	}
 *
 *
 * 
 */