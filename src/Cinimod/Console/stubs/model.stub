<?php

namespace DummyNamespace;

use Mkny\Cinimod\Models\BaseMknyModel;

use Laracasts\Presenter\PresentableTrait;

class DummyClass extends BaseMknyModel  {


    /**
     * Implementação das view-presenters.
     * Laracasts/Presenter
     */
    use PresentableTrait;
    protected $presenter = '\App\Presenters\DummyClassPresenter';
    
    /**
     * Nome da tabela, utilizada pelo Model
     *
     * @var string
     */
    protected $table = '{{table}}';

    /**
     * Variavel que guarda o schema. Muito util. Falta no Laravel!
     * 
     * @var string
     */
    // protected $schema = '{{schema}}';

    /**
     * Atributos que poderão passar pelo mass-assign; (laravel)
     *
     * @var array
     */
    protected $fillable = [{{fillable}}];

    /**
     * Define se o Model irá trabalhar com timestamps; (laravel)
     *
     * @var bool
     */
    public $timestamps = {{timestamps}};


    /**
     * Nome do atributo primário;
     * 
     * @var string
     */
    // ESTRANHAMENTE FUNCIONOU QUANDO COLOQUEI A SEGUNDA CHAVE, TESTAR DEPOIS VIU
    // CRAZY SHIT WHEN WORKING WITH MULTIPLE PRIMARYKEY
    // https://github.com/laravel/framework/issues/5355
    public $primaryKey = '{{primaryKey}}';

    /**
     * Indicador de ordenação
     * @var array
     */
    public $orderBy = ['{{primaryKey}}', 'asc'];

    /**
     * Maximo de registros (no caso de paginacao)
     * @var integer
     */
    public $maxPerPage = 10;

    /**
     * Nome da conexão, estratégia para fugir do bug de schema do PG
     * 
     * @var string
     */
    public $connection = '{{connectionName}}';

    // Custom vars
    
    // Custom vars end
    


    // Relation functions
    {{model_function_relation}}
    // Relation functions end

    // Custom functions
    
    // Caso a utilizacao seja constante, eu vou colocar isso automatizado!
    // Modelo principal, que ira buscar o valor da variavel neta
    // public function getCodPaisAttribute()
    // {
    //     return $this->cod_estados->cod_pais;
    // }

    // Modelo principal
    // public function getCodEstadoAttribute()
    // {
    //     return $this->cod_cidades ? $this->cod_cidades->cod_estado:'';
    // }

    // public function getCodPaisAttribute()
    // {
    //     if ($this->cod_cidades && $this->cod_cidades->cod_estados && $this->cod_cidades->cod_estados->cod_pais) {
    //         return $this->cod_cidades->cod_estados->cod_pais;
    //     } else {
    //         return '';
    //     }
    // }
    // 
    // 
    // Essas funcoes abaixo, sao para relacionamentos multi-niveis (estudar melhor depois)
    // 2016-10-05 18:45
    // 
    // public function cod_estados()
    // {
    //     return $this->hasMany('\App\Models\Estado', 'cod_pais');
    // }
    // 
    // public function cod_cidades()
    // {
    //     return $this->hasManyThrough('\App\Models\Cidade', '\App\Models\Estado', 'cod_pais', 'cod_estado');
    // }

    // Custom functions end

}